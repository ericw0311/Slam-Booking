<?php

namespace SD\CoreBundle\Repository;

/**
 * TimetableLineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimetableLineRepository extends \Doctrine\ORM\EntityRepository
{
    // Recherche les creneaux d'une grille horaire
    public function getTimetableLines($timetableHeader)
    {
    $queryBuilder = $this->createQueryBuilder('tl');
    $queryBuilder->where('tl.timetableHeader = :timetableHeader')->setParameter('timetableHeader', $timetableHeader);
    $queryBuilder->orderBy('tl.id', 'ASC');
   
    $query = $queryBuilder->getQuery();
    $results = $query->getResult();
    return $results;
    }

    // Recherche les derniers creneaux horaires d'une grille
    public function getLastTimetableLines($timetableHeader, $maxRecord)
    {
    $queryBuilder = $this->createQueryBuilder('tl');
    $queryBuilder->where('tl.timetableHeader = :timetableHeader')->setParameter('timetableHeader', $timetableHeader);
    $queryBuilder->orderBy('tl.id', 'DESC');
    $queryBuilder->setMaxResults($maxRecord);
   
    $query = $queryBuilder->getQuery();
    $results = $query->getResult();
    return $results;
    }

    // Recherche quelques creneaux horaires d'une grille a partir d'une position
    public function getSomeTimetableLines($timetableHeader, $timetableLineID, $maxRecord, $previous = false)
    {
    $queryBuilder = $this->createQueryBuilder('tl');
    $queryBuilder->where('tl.timetableHeader = :timetableHeader')->setParameter('timetableHeader', $timetableHeader);
    if ($previous) {
        $queryBuilder->andWhere('tl.id < :timetableLineID')->setParameter('timetableLineID', $timetableLineID);
    } else {
        $queryBuilder->andWhere('tl.id > :timetableLineID')->setParameter('timetableLineID', $timetableLineID);
    }
    if ($previous) {
        $queryBuilder->orderBy('tl.id', 'DESC');
    } else {
        $queryBuilder->orderBy('tl.id', 'ASC');
    }
    $queryBuilder->setMaxResults($maxRecord);
   
    $query = $queryBuilder->getQuery();
    $results = $query->getResult();
    return $results;
    }
}
